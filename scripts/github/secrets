#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##?
##? Handle Github secrets
##?
#?? 1.0.0
##?
##? Usage:
##?   secrets list --repository=<repository> [--environment=<environment>]
##?   secrets set --name=<name> --repository=<repository> [--value=<value>][--environment=<environment>]
##?
##? Arguments:
##?   list  List repository secrets
##?   set   Set repository secrets
##?
##? Options:
##?   -e, --environment=<envronment>  Github environment
##?   -n, --name=<name>               Secret name
##?   -r, --repository=<repository>   Repository name
##?   -v, --value=<value>             Secret value
##?
docs::eval "$@"

organization=${GITHUB_ORGANIZATION:-abelazo}

full_repository_name=${organization}/${repository}
if [[ "${list}" == "true" ]]; then
  log::header "# Secrets for ${full_repository_name} (${environment})"
  environment_option=""
  [[ "${environment}" != "" ]] && environment_option="--env ${environment}"
  gh secret list ${environment_option} --repo ${full_repository_name}
fi

if [[ "${set}" == "true" ]]; then
  log::header "# Setting secret ${name} in ${full_repository_name} (${environment})"
  environment_argument=""
  [[ "${environment}" != "" ]] && environment_argument="--env ${environment}"
  if [[ "${value}" != "" ]]; then
    gh secret set ${name} ${environment_argument} --body "${value}" --repo ${full_repository_name}
  else
    gh secret set ${name} ${environment_argument} --repo ${full_repository_name}
  fi
fi
