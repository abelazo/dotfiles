#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##?
##? Self-hosted runners management
##?
#?? 1.0.0
##?
##? Usage:
##?   runners labels
##?   runners list [--group=<group>]
##?   runners token
##?
##? Arguments:
##?   labels  List labels of self-hosted runners
##?   list    List self-hosted runners
##?   token   Issues a registration token for a new self-hosted runner
##?
##? Options:
##?   -g, --group=<group>  Runner group
##?
docs::eval "$@"

# Set GITHUB_ORGANIZATION variable to search in your specific organization
organization=${GITHUB_ORGANIZATION:-abelazo}

if [ "${labels}" == "true" ]; then
  result=$(gh api --paginate \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /orgs/${organization}/actions/runners)

  jq -r '.runners[] | [.name, .labels[].name] | @tsv' <<<${result} | column -t
fi

if [ "${list}" == "true" ]; then

  if [[ "${group}" == "all" ]];then
    runners=$(gh api --paginate \
                 -H "Accept: application/vnd.github+json" \
                 -H "X-GitHub-Api-Version: 2022-11-28" \
                 /orgs/${organization}/actions/runners)
  elif [[ "${group}" == "" ]];then
    runner_groups=$(gh api --paginate \
                       -H "Accept: application/vnd.github+json" \
                       -H "X-GitHub-Api-Version: 2022-11-28" \
                       /orgs/${organization}/actions/runner-groups)

    group=$(jq -r '.runner_groups[].name' <<<${runner_groups} | sort | uniq | gum filter --header "Runner group...")
    runner_group_id=$(jq -r '.runner_groups[] | select(.name | startswith("'${group}'")).id' <<<${runner_groups})
    runners=$(gh api --paginate \
                 -H "Accept: application/vnd.github+json" \
                 -H "X-GitHub-Api-Version: 2022-11-28" \
                 /orgs/${organization}/actions/runner-groups/${runner_group_id}/runners)
  else
    runner_groups=$(gh api --paginate \
                       -H "Accept: application/vnd.github+json" \
                       -H "X-GitHub-Api-Version: 2022-11-28" \
                       /orgs/${organization}/actions/runner-groups)
    runner_group_id=$(jq -r '.runner_groups[] | select(.name | startswith("'${group}'")).id' <<<${runner_groups})
    runners=$(gh api --paginate \
                 -H "Accept: application/vnd.github+json" \
                 -H "X-GitHub-Api-Version: 2022-11-28" \
                 /orgs/${organization}/actions/runner-groups/${runner_group_id}/runners)
  fi
  jq -r '(.runners[] | [.name, .status, .busy, (.labels | map(.name) | join(","))]) | @csv' <<<${runners} |
    sed "s/online/$(gum style --foreground 2 online)/g" |
    sed "s/offline/$(gum style --foreground 6 offline)/g" |
    sed "s/false/$(gum style --foreground 2 Idle)/g" |
    sed "s/true/$(gum style --foreground 3 Active)/g" |
    gum table --columns Runner,Status,Busy,Labels --print
fi

if [ "${token}" == "true" ]; then
  gh api \
     --method POST \
     -H "Accept: application/vnd.github+json" \
     -H "X-GitHub-Api-Version: 2022-11-28" \
     /orgs/${organization}/actions/runners/registration-token
fi
