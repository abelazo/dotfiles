#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##?
##? Search teams in Github using gh CLI
##?
#?? 1.0.0
##?
##? Usage:
##?   teams list [--depth=<depth>]
##?   teams members --team=<team>
##?   teams repos   --team=<team>
##?
##? Arguments:
##?   list     List teams within the organization
##?   members  List members of a given team
##?   repos    List repos of a given team
##?
##? Options:
##?   -d, --depth=<depth>  Max depth in the search (0 means no limit) [default: 0]
##?   -t, --team=<team>    Team name
##?
docs::eval "$@"

# Set GITHUB_ORGANIZATION variable to search in your specific organization
organization=${GITHUB_ORGANIZATION:-abelazo}

process_node() {
  local parent_name=${1}
  local current_level=${2}
  local depth=${3}

  if [[ ${depth} -ne 0 ]]; then
    (( current_level > depth )) && return
  fi

  if [[ "${parent_name}" == "null" ]]; then
    childs=$(jq -r '[.[] | select(.parent == null)]' <<<${teams})
  else
    echo ${parent_name}
    childs=$(jq -r '[.[] | select(.parent.name == "'${parent_name}'")]' <<<${teams})
  fi

  if [[ $(jq length <<<${childs}) -eq 0 ]]; then
    return
  else
    for child in $(jq -r .[].name <<<${childs}); do
      process_node "${child}" $((current_level + 1)) ${depth}
    done
  fi
}

if [[ "${list}" == "true" ]]; then
  teams=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" '/orgs/'${organization}'/teams' --paginate)
  process_node "null" 0 ${depth}
fi

if [[ "${members}" == "true" ]]; then
  team_slug=$(echo ${team} | sed 's/--/-/g')
  members=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/orgs/${organization}/teams/${team_slug}/members" --paginate)

  if [[ ${?} -eq 0 ]]; then
    num_members=$(jq -r .[].login <<<${members} | wc -l | xargs)
    log::note "# ${team} (${num_members})"
    jq -r .[].login <<<${members} | sort
  fi
fi

if [[ "${repos}" == "true" ]]; then
  team_slug=$(echo ${team} | sed 's/--/-/g')
  log::header "Repositories with permission for ${team}"
  gh api --paginate -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/${organization}/teams/${team_slug}/repos | jq -r '["Name","Admin", "Maintain", "Push", "Triage", "Pull"], (.[] | [.name, .permissions.admin, .permissions.maintain, .permissions.push, .permissions.triage, .permissions.pull]) | @csv' | gum table --print
fi
