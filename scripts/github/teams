#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##?
##? Search teams in Github using gh CLI
##?
#?? 1.0.0
##?
##? Usage:
##?   teams [--node=<node>] [--output=<output>]
##?
##? Options:
##?   -n, --node=<node>      Node
##?   -o, --output=<output>  Output format (list|json) [default:list]
##?
docs::eval "$@"

# Set GITHUB_ORGANIZATION variable to search in your specific organization
organization=${GITHUB_ORGANIZATION:-abelazo}

process_node() {
  node_name=${1}

  if [[ "${node_name}" == "null" ]]; then
    childs=$(jq -r '[.[] | select(.parent == null)]' <<<${teams})
  else
    echo ${node_name}
    childs=$(jq -r '[.[] | select(.parent.name == "'${node_name}'")]' <<<${teams})
  fi

  if [[ $(jq length <<<${childs}) -eq 0 ]]; then
    return
  else
    for child in $(jq -r .[].name <<<${childs}); do
      process_node "${child}"
    done
  fi
}

teams=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" '/orgs/'${organization}'/teams' --paginate)

# Output format
if [[ "${output}" == "list" ]]; then
  if [[ "${node}" != "" ]]; then
    filtered=$(jq -r '.[] | select(.name == "'${node}'").name' <<<${teams})
    for node in ${filtered}; do
      process_node "${node}"
    done
  else
    process_node "null"
  fi
else
  if [[ "${node}" != "" ]]; then
    jq -r '.[] | select(.parent.name == "'${node}'")' <<<${teams}
  else
    jq . <<<${teams}
  fi
fi
