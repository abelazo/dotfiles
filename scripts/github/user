#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

basepath=$(dirname $0)

##?
##? Search users in Github using gh CLI
##?
#?? 1.0.0
##?
##? Usage:
##?   user list
##?   user teams --user=<user> [--verbose]
##?   user contribution --user=<user> [--year=<year>]
##?
##? Arguments:
##?   list          List all users of a Github organization
##?   teams         List teams of a given user
##?   contribution  List user contributions
##?
##? Options:
##?   -u, --user=<user>   Github user name
##?   -v, --verbose      Verbose output
##?   -y, --year=<year>  Year of the contribution [default:2024]
##?
docs::eval "$@"

# Set GITHUB_ORGANIZATION variable to search in your specific organization
organization=${GITHUB_ORGANIZATION:-abelazo}

if [[ "${list}" == "true" ]]; then
  gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/orgs/${organization}/members" --paginate | jq -r .[].login | sort
fi

if [[ "$teams" == "true" ]]; then
  log::header "${user} teams"
  teams_query_file="${basepath}/queries/teams.graphql"

  options="--print=b"

  results=$(http --auth-type bearer -a ${JWT_AUTH_TOKEN} ${options} https://api.github.com/graphql "Accept: application/vnd.github.v4.idl" query="$( cat ${teams_query_file} )" variables='{"organization": "'${organization}'", "username": "'${user}'"}')

  if [[ "${verbose}" == "true" ]]; then
    jq . <<<${results}
  else
    jq -r '.data.organization.teams.edges[].node.name' <<<${results}
  fi
fi

if [[ "$contribution" == "true" ]]; then
  commits_query_file="${basepath}/queries/contributions.graphql"
  options="--print=b"
  raw_results=$(http --auth-type bearer -a ${JWT_AUTH_TOKEN} ${options} https://api.github.com/graphql "Accept: application/vnd.github.v4.idl" query="$( cat ${commits_query_file} )" variables='{"username": "'${user}'"}')

  year_result=$(jq '[.data.user.contributionsCollection.contributionCalendar.weeks[].contributionDays[] | select(.date | startswith("'${year}'")) | .contributionCount] | add // 0' <<<${raw_results})

  log::header "${user} contribution in ${year} (${year_result})"
  header=$(printf '"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"\n')
  result=""
  for month in $(seq -f "%02g" 1 12); do
    monthly_result=$(jq '[.data.user.contributionsCollection.contributionCalendar.weeks[].contributionDays[] | select(.date | startswith("'${year}'-'${month}'")) | .contributionCount] | add // 0' <<<${raw_results})
    [[ ${result} == "" ]] && result=$(printf "\"${monthly_result}\"") || result=${result},$(printf "\"${monthly_result}\"")
  done
  (echo $header && echo $result) | gum table --print
fi
