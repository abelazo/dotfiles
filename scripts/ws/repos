#!/usr/bin/env bash

source "$DOTFILES_PATH/scripts/core/_main.sh"

##?
##? Interact with workspace GIT repositories
##?
#?? 1.0.0
##?
##? Usage:
##?   repos pull [--folder=<folder>]
##?   repos pre-commit [--uninstall][--folder=<folder>]
##?
##? Arguments:
##?   pull        Pull all git repos
##?   pre-commit  Runs pre-commit install in all git repos
##?
##? Options:
##?   -f, --folder=<folder>  Base folder to execute the action
##?   -u, --uninstall        Uninstall hooks
##?
docs::eval "$@"

if [ "${folder}" != "" ]; then
  work_dir=$(realpath ${folder})
else
  [[ -z ${WS} ]] && work_dir=$(dirname ${DOTFILES_PATH}) || work_dir=${WS}
fi

[[ "${pull}" == true ]] && action="Pulling repositories" || action="Installing pre-commit"
log::header "${action} in ${work_dir}"

for gitdir in `find ${work_dir} -type d \( \( -path "*/.terraform" -o -path "*/.terragrunt-cache" \) -o -path "*/.cache" \) -prune -o -name .git -print`; do
  pushd $(dirname $gitdir) >& /dev/null
  if [ "${pull}" == "true" ]; then
    log::note "Updating $(basename $(dirname $gitdir))"
    git pull
  elif [ "${pre_commit}" == "true" ]; then

    all_hooks=(commit-msg post-checkout post-commit post-merge post-rewrite pre-commit pre-merge-commit pre-push pre-rebase prepare-commit-msg)
    default_hooks=(commit-msg pre-commit pre-merge-commit)

    subcommand="install"
    msg="Installing pre-commit hooks (${default_hooks[@]}) in $(basename $(dirname $gitdir))"
    if [ "${uninstall}" == "true" ]; then
      subcommand="uninstall"
      msg="Uninstalling pre-commit hooks (${default_hooks[@]}) in $(basename $(dirname $gitdir))"
    fi

    if [ -f .pre-commit-config.yaml ]; then
      log::note ${msg}
      pre-commit ${subcommand}
      pre-commit ${subcommand} ${default_hooks[@]/#/-t } > /dev/null
    fi
  fi
  popd >& /dev/null
done
